// Generated by view binder compiler. Do not edit!
package com.app.ebarter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.ebarter.R;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetAddOfferBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnSendOffer;

  @NonNull
  public final ShapeableImageView ivProduct;

  @NonNull
  public final TextInputEditText teDescription;

  @NonNull
  public final TextInputEditText teDetails;

  @NonNull
  public final TextInputEditText teLocation;

  @NonNull
  public final TextInputEditText tePhoneNumber;

  @NonNull
  public final TextInputLayout tlDescription;

  @NonNull
  public final TextInputLayout tlDetails;

  @NonNull
  public final TextInputLayout tlLocation;

  @NonNull
  public final TextInputLayout tlPhoneNumber;

  private BottomSheetAddOfferBinding(@NonNull NestedScrollView rootView, @NonNull Button btnCancel,
      @NonNull Button btnSendOffer, @NonNull ShapeableImageView ivProduct,
      @NonNull TextInputEditText teDescription, @NonNull TextInputEditText teDetails,
      @NonNull TextInputEditText teLocation, @NonNull TextInputEditText tePhoneNumber,
      @NonNull TextInputLayout tlDescription, @NonNull TextInputLayout tlDetails,
      @NonNull TextInputLayout tlLocation, @NonNull TextInputLayout tlPhoneNumber) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSendOffer = btnSendOffer;
    this.ivProduct = ivProduct;
    this.teDescription = teDescription;
    this.teDetails = teDetails;
    this.teLocation = teLocation;
    this.tePhoneNumber = tePhoneNumber;
    this.tlDescription = tlDescription;
    this.tlDetails = tlDetails;
    this.tlLocation = tlLocation;
    this.tlPhoneNumber = tlPhoneNumber;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetAddOfferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetAddOfferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_add_offer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetAddOfferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_send_offer;
      Button btnSendOffer = ViewBindings.findChildViewById(rootView, id);
      if (btnSendOffer == null) {
        break missingId;
      }

      id = R.id.iv_product;
      ShapeableImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.te_description;
      TextInputEditText teDescription = ViewBindings.findChildViewById(rootView, id);
      if (teDescription == null) {
        break missingId;
      }

      id = R.id.te_details;
      TextInputEditText teDetails = ViewBindings.findChildViewById(rootView, id);
      if (teDetails == null) {
        break missingId;
      }

      id = R.id.te_location;
      TextInputEditText teLocation = ViewBindings.findChildViewById(rootView, id);
      if (teLocation == null) {
        break missingId;
      }

      id = R.id.te_phone_number;
      TextInputEditText tePhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tePhoneNumber == null) {
        break missingId;
      }

      id = R.id.tl_description;
      TextInputLayout tlDescription = ViewBindings.findChildViewById(rootView, id);
      if (tlDescription == null) {
        break missingId;
      }

      id = R.id.tl_details;
      TextInputLayout tlDetails = ViewBindings.findChildViewById(rootView, id);
      if (tlDetails == null) {
        break missingId;
      }

      id = R.id.tl_location;
      TextInputLayout tlLocation = ViewBindings.findChildViewById(rootView, id);
      if (tlLocation == null) {
        break missingId;
      }

      id = R.id.tl_phone_number;
      TextInputLayout tlPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (tlPhoneNumber == null) {
        break missingId;
      }

      return new BottomSheetAddOfferBinding((NestedScrollView) rootView, btnCancel, btnSendOffer,
          ivProduct, teDescription, teDetails, teLocation, tePhoneNumber, tlDescription, tlDetails,
          tlLocation, tlPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
